name: release
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
env:
  CARGO_INCREMENTAL: 0
jobs:
  release_please:
    name: Release Please
    permissions: write-all
    runs-on: ubuntu-latest
    if: github.repository == 'domsleee/posh-fzf'
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: rust
          changelog-type: github
  github_build:
    name: ${{ matrix.target }}
    needs: [release_please]
    permissions: write-all
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: arm-unknown-linux-musleabihf
            target_rustflags: '--codegen linker=arm-linux-gnueabihf-gcc'
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            target_rustflags: '--codegen linker=aarch64-linux-gnu-gcc'
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: aarch64-pc-windows-msvc
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Rust toolchain and cache
        uses: actions-rust-lang/setup-rust-toolchain@v1.4.3
        with:
          target: ${{ matrix.target }}

      - name: Install AArch64 Toolchain
        if: ${{ matrix.target == 'aarch64-unknown-linux-musl' }}
        run: |
          sudo apt-get update
          sudo apt-get install gcc-aarch64-linux-gnu

      - name: Install ARM Toolchain
        if: ${{ matrix.target == 'arm-unknown-linux-musleabihf' || matrix.target == 'armv7-unknown-linux-musleabihf' }}
        run: |
          sudo apt-get update
          sudo apt-get install gcc-arm-linux-gnueabihf

      - name: Build binary
        env:
          RUSTFLAGS: ${{ matrix.target_rustflags }}
        run: cargo build --release --locked --target=${{ matrix.target }} --color=always

      - name: Install cargo-deb
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: cargo install cargo-deb

      - name: Build deb
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: cargo deb --no-build --no-strip --output=. --target=${{ matrix.target }}

      - name: Package (*nix)
        if: runner.os != 'Windows'
        run: >
          tar -cv
          README.md
          -C target/${{ matrix.target }}/release/ posh-fzf
          | gzip --best
          > 'posh-fzf-${{ needs.release_please.outputs.tag_name }}-${{ matrix.target }}.tar.gz'
      - name: Package (Windows)
        if: runner.os == 'Windows'
        run: >
          7z a 'posh-fzf-${{ needs.release_please.outputs.tag_name }}-${{ matrix.target }}.zip'
          README.md
          ./target/${{ matrix.target }}/release/posh-fzf.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: |
              *.deb
              *.tar.gz
              *.zip

      - name: Upload artifact to release release
        if: ${{ github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'chore(main)') }}
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            *.deb
            *.tar.gz
            *.zip
          name: ${{ needs.release_please.outputs.tag_name }}
          tag_name: ${{ needs.release_please.outputs.tag_name }}

  publish:
    runs-on: ubuntu-latest
    needs: [release_please, github_build]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Publish Release
      run: gh release edit ${{ needs.release_please.outputs.tag_name }} --draft=false --repo=domsleee/posh-fzf
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup Rust toolchain and cache
      uses: actions-rust-lang/setup-rust-toolchain@v1.4.3
      with:
        target: x86_64-unknown-linux-musl
    - name: Publish
      if: ${{ github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'chore(main)') }}
      run: cargo publish
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}